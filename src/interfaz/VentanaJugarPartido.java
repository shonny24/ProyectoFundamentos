/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import logica.OpenDeAustralia;
import logica.Partido;

/**
 *
 * @author Shonny
 */
public class VentanaJugarPartido extends javax.swing.JFrame {

    private OpenDeAustralia miOpenAustralia;

    /**
     * variable estatica de tipo String que guarda el idDelpartido
     */
    public static String idPartido;
    private Timer t;//varible de tipo TIMER
    private int h, m, s;//hora, minutos, segundos

    /**
     * variable tipo String que guarda la etapa
     */
    public static String etapa;

    /**
     * variable estatica tipo entera que guarda la asistencia
     */
    public static int asistencia;

    /**
     * Constructor VentanaJugarPartido
     *
     * @param open OpenDeAustralia
     */
    public VentanaJugarPartido(OpenDeAustralia open) {
        miOpenAustralia = open;
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/interfaz/images/Australian_Open_Logo.png")).getImage());
        //************************
        //Centrar Jframe
        setLocationRelativeTo(null);
        //************************
        //se inicializa la variable tipo TIMER
        t = new Timer(1, acciones);

        jLEtapa.setText(etapa);//inicializar el Jlavel con el valor que tiene etapa

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor. Metodo que ejecuta el juego manual del
     * partido en curso.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLCancha = new javax.swing.JLabel();
        jLEtapa = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLTiempoPartido = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLidPartido = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLAsistencia = new javax.swing.JLabel();
        jBJugar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEstadisticas = new javax.swing.JTable();
        jBAutomatico = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Jugar Partido");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Estadisticas Partido"));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Cancha:");

        jLCancha.setText("jLabel2");

        jLEtapa.setText("---------");

        jLabel3.setText("Tiempo de la partida:");

        jLTiempoPartido.setText("0:0:0");

        jLabel4.setText("Partido:");

        jLidPartido.setText("jLabel5");

        jLabel2.setText("Asistencia:");

        jLAsistencia.setText("--");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLEtapa)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLTiempoPartido))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLCancha)
                            .addComponent(jLAsistencia)
                            .addComponent(jLidPartido))))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLCancha))
                .addGap(18, 18, 18)
                .addComponent(jLEtapa)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLidPartido))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLAsistencia))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLTiempoPartido))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBJugar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/images/tenis64.png"))); // NOI18N
        jBJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBJugarActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTableEstadisticas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Set 1", "Set 2", "Set 3", "Set 4", "Set 5", "Puntos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableEstadisticas);
        if (jTableEstadisticas.getColumnModel().getColumnCount() > 0) {
            jTableEstadisticas.getColumnModel().getColumn(0).setPreferredWidth(200);
            jTableEstadisticas.getColumnModel().getColumn(1).setPreferredWidth(2);
            jTableEstadisticas.getColumnModel().getColumn(2).setPreferredWidth(10);
            jTableEstadisticas.getColumnModel().getColumn(3).setPreferredWidth(10);
            jTableEstadisticas.getColumnModel().getColumn(4).setPreferredWidth(10);
            jTableEstadisticas.getColumnModel().getColumn(5).setPreferredWidth(10);
            jTableEstadisticas.getColumnModel().getColumn(6).setPreferredWidth(10);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBAutomatico.setText("Automatico");
        jBAutomatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAutomaticoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jBAutomatico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                .addComponent(jBJugar)
                .addGap(95, 95, 95))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBAutomatico)
                            .addComponent(jBJugar)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBJugarActionPerformed
        String id = jLidPartido.getText(); //Se obtiene el id del partido.
        Partido miPartido = miOpenAustralia.buscarPartido(id); //Se busca el partido
        miPartido.jugar();//Se llama al metodo jugar de la clase partido.
        llenarTablaJugarPartido();// Se llena la tabla.
        String tiempoLabel = jLTiempoPartido.getText();//Se obtiene el tiempo
        miPartido.setTiempo(tiempoLabel);//Se agrega el tiempo a la clase partido
        if (miPartido.getDeuce() == true) {
            JOptionPane.showMessageDialog(null, " ¡DEUCE! ");
        }
        if (miPartido.getTieBreak() == true) {
            JOptionPane.showMessageDialog(null, " ¡TIEBREAK! ");
        }
        if (t.isRunning() == false) {
            t.start();
        }
        if (miPartido.determinarGanador() == true) {
            t.stop();
        }
    }//GEN-LAST:event_jBJugarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        String id = jLidPartido.getText();
        //Se busca el id del partido y cuando lo encuentra lo guarda en el la variable partido de tipo Partido
        Partido partido = miOpenAustralia.buscarPartido(id);
        //Estrae el tiempo del JlavelTIempoPatido
        String tiempoLabel = jLTiempoPartido.getText();
        //Le para ese tiempo al partido
        partido.setTiempo(tiempoLabel);
    }//GEN-LAST:event_formWindowClosing

    /**
     * Metodo que ejecuta el partido en curso de una manera automatica
     */
    private void jBAutomaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAutomaticoActionPerformed
        t.stop(); //Se detiene el cronometro.
        int id = Integer.parseInt(jLidPartido.getText()); //  Se obtiene el id del partido en curso.
        miOpenAustralia.getPartidos().get(id - 1).generarJuegoAutomatico(); // Se llama al metodo generarJuegoAutomatico de la clase partido, y se ejecuta todo el partido.
        llenarTablaJugarPartido(); // Se llena la tabla.
        jLTiempoPartido.setText(miOpenAustralia.getPartidos().get(id - 1).getTiempo());//Se obtiene el tiempo del partido de la clase partido
    }//GEN-LAST:event_jBAutomaticoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaJugarPartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaJugarPartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaJugarPartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaJugarPartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaJugarPartido(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAutomatico;
    private javax.swing.JButton jBJugar;
    private javax.swing.JLabel jLAsistencia;
    private javax.swing.JLabel jLCancha;
    private javax.swing.JLabel jLEtapa;
    private javax.swing.JLabel jLTiempoPartido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLidPartido;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEstadisticas;
    // End of variables declaration//GEN-END:variables

    /**
     * Metodo que sirve para inicializar los valores de esta ventana, se utiliza
     * cuando se le da doble click a las filas de la tabla que se encuentra en
     * VentanaVerRondas
     */
    public void inicializarDatosVentanaPartido() {
        //se setea el JlabelIdPartido
        jLidPartido.setText(idPartido);
        //se obtiene el id
        String id = jLidPartido.getText();
        Partido partido = miOpenAustralia.buscarPartido(id);
        String nombreCancha = partido.getPista().getNombre();
        //obtengo el tiempo del objeto y inicializo los valores
        String tiempo = partido.getTiempo();
        //hago un split del tiempo ya que esta en formato "00:00:00"
        String[] partirHora = tiempo.split(":");
//        h = Integer.parseInt(partirHora[0]);
        h = Integer.parseInt(partirHora[0]);
        m = Integer.parseInt(partirHora[1]);
        s = Integer.parseInt(partirHora[2]);
        //obtengo el nombre de la cancha y la muestro en el label
        jLCancha.setText(nombreCancha);
        //obtengo el timpo y los muestro en el label
        jLTiempoPartido.setText(tiempo);
        //extraer la asistencia
        jLAsistencia.setText(partido.getAsistencia() + "");

        llenarTablaJugarPartido();
    }

    /**
     * Este metodo llena la tabla De los sets que se encuentra en la matriz
     */
    public void llenarTablaJugarPartido() {
        String id = jLidPartido.getText();
        Partido partido = miOpenAustralia.buscarPartido(id);
        DefaultTableModel dtm = (DefaultTableModel) jTableEstadisticas.getModel();//se usa DefaultTableModel para manipular facilmente el Tablemodel
        dtm.setRowCount(2);
        dtm.setColumnCount(7);
        String[][] sets = partido.getSets();

        jTableEstadisticas.setValueAt(partido.getJugador1().getNombre(), 0, 0);
        jTableEstadisticas.setValueAt(partido.getJugador2().getNombre(), 1, 0);
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < 6; j++) {
                jTableEstadisticas.setValueAt(sets[i][j], i, j + 1);
            }
        }
    }
    /**
     * Este escuchador hace parte del Timer (pone la logina de los tiempos para el cronometo
     */
    private ActionListener acciones = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent ae) {

            ++s;
            if (s == 100) {
                s = 0;
                ++m;
            }
            if (m == 60) {
                m = 0;
                ++h;
            }
//            if (h == 60) {
//                h = 0;
//                ++h;
//            }
            actualizarLabel();
        }
    };
    /**
     * Actualiza el jLTiempoPartido y pertenece la parte del Cronometro
     */
    private void actualizarLabel() {
//                String tiempo = (h <= 9 ? "0" : "") + h + ":" + (h <= 9 ? "0" : "") + h + ":" + (m <= 9 ? "0" : "") + m + ":" + (s <= 9 ? "0" : "") + s;
        String tiempo = (h <= 9 ? "0" : "") + h + ":" + (m <= 9 ? "0" : "") + m + ":" + (s <= 9 ? "0" : "") + s;
        jLTiempoPartido.setText(tiempo);
    }

}
